Package Control Messages
========================

Robot Framework Assistant
-------------------------

  Features
  --------

  * Syntax highlighting/automatic detection/activation for Robot Framework '.robot' files
  * `Alt+Enter` or `Alt+Click` to go to source of item at cursor (either *Library*, *Resource*, *Keyword* or *Variable*)
  * `Ctrl+Alt+Enter` or `Ctrl+Alt+Click` on item to log *Keyword* documentation into output panel.
  * `Ctrl+Space` to auto complete library/resource name, keywords (can start with any part/word of keyword). Using of '.' after library/resource name is also supported (limits keywords to given library/resource);
  * Autocomplete gives *Keyword* with its *arguments* formatted according to Robot Framework syntax. Jump through arguments with `TAB` key.
  * `$`, `@` or `&` for autocomplete of *Built-in* and *Resource* variables
  * `:` and then `TAB` to get list of special Robot Framework syntax elements (like *[Arguments]*, *[Return]* etc);
  * `:f` and then `TAB` to insert *:FOR* loop template;
  * `*k`, `*s`, `*v` and then `TAB` to insert tables hedings templates
  * Toggle comments with `Cmd+/`
  * `Cmd+B` to run *pybot* with current file
  * `Robot Framework` context menu which allows to run *pybot* with current file, update internal database, insert snippets etc.


  Please visit https://github.com/andriyko/sublime-robot-framework-assistant for more information.


Emmet
-----

  Thank you for installing Emmet -- a toolkit that can greatly improve your workflow. Note that this plugin automatically downloads and installs PyV8 binary (see status bar message).

  ******************************
  Please restart editor
  to finish installation process
  after PyV8 was downloaded.
  ******************************

  Tab key handler
  ==========================

  By default, Emmet allows you to expand abbreviations with Tab key in HTML, XML, HAML and CSS/SASS/LESS/Stylus documents. As a side effect, you canâ€™t use some of your ST2 snippets.

  Please read https://github.com/sergeche/emmet-sublime#tab-key-handler about how Tab handler works and how to tweak its behavior to match your needs.

  Enter key
  ==========================

  In HTML and XML documents, Emmet overrides Enter key to insert formatted line breaks between opening and closing tags. In some cases it will break character input (for example, in Japanese language).

  To disable Enter key handler, simply add the following option in your user's Preferences file:

  "disable_formatted_linebreak": true

  Actions shortcuts
  ==========================

  Emmet has a number of actions with keyboard shortcuts that may override ones you're using commonly (for example, Ctrl-E or Ctrl-Down). Please read the project main page to get list of available actions and keyboard shortcuts and how to disable them:
  https://github.com/sergeche/emmet-sublime

  Documentation and examples:
  http://emmet.io

  ------------------------------
  Follow me on Twitter: @emmetio
  ------------------------------


BracketHighlighter
------------------

  # BracketHighlighter

  Welcome to BracketHighlighter!  For a quick start guide, please go to
  `Preferences->Package Settings->BracketHighlighter->Quick Start Guide`.


SublimeCodeIntel
----------------

  SublimeCodeIntel
  ================

   ____        _     _ _                 ____          _      ___       _       _
  / ___| _   _| |__ | (_)_ __ ___   ___ / ___|___   __| | ___|_ _|_ __ | |_ ___| |
  \___ \| | | | '_ \| | | '_ ` _ \ / _ \ |   / _ \ / _` |/ _ \| || '_ \| __/ _ \ |
   ___) | |_| | |_) | | | | | | | |  __/ |__| (_) | (_| |  __/| || | | | ||  __/ |
  |____/ \__,_|_.__/|_|_|_| |_| |_|\___|\____\___/ \__,_|\___|___|_| |_|\__\___|_|
  A full-featured code intelligence and smart autocomplete engine for Sublime Text.
     (Code intelligence plugin ported from Open Komodo Editor to Sublime Text)


  +-------------------------------- HELP WANTED ---------------------------------+
  |     Maintaining this project is hard, I do it in my spare time, but I'm      |
  |     basically all alone. If anyone is interested in contributing, please     |
  |     contact me. I really need much more help maintaining SublimeCodeIntel    |
  |                                                                              |
  |                       Follow me on twitter @germbravo                        |
  |           You can find us at #sublimecodeintel on irc.freenode.net           |
  |                                                                              |
  |             If you like SublimeCodeIntel, please make a donation:            |
  |        http://sublimecodeintel.github.io/SublimeCodeIntel/donate.html        |
  +------------------------------------------------------------------------------+


  Features
  --------

  Supports all the languages Komodo Editor supports for Code Intelligence (CIX, CodeIntel2):

  JavaScript, Mason, XBL, XUL, RHTML, SCSS, Python, HTML, Ruby, Python3, XML, Sass, XSLT, Django, HTML5, Perl, CSS, Twig, Less, Smarty, Node.js, Tcl, TemplateToolkit, PHP.


  Provides the following features:

  * Jump to Symbol Definition - Jump to the file and line of the definition of a symbol.
  * Imports autocomplete - Shows autocomplete with the available modules/symbols in real time.
  * Function Call tooltips - Displays information in the status bar about the working function.


  + Shortcuts for jump to definition have changed:

    For Mac OS X:
      * Jump to definition = ``Control+Click``
      * Jump to definition = ``Control+Command+Alt+Up``
      * Go back = ``Control+Command+Alt+Left``
      * Manual CodeIntel = ``Control+Shift+space``

    For Linux:
      * Jump to definition = ``Super+Click``
      * Jump to definition = ``Control+Super+Alt+Up``
      * Go back = ``Control+Super+Alt+Left``
      * Manual CodeIntel = ``Control+Shift+space``

    For Windows:
      * Jump to definition = ``Alt+Click``
      * Jump to definition = ``Control+Windows+Alt+Up``
      * Go back = ``Control+Windows+Alt+Left``
      * Manual CodeIntel = ``Control+Shift+space``



  Notes
  -----

  ** Restart Sublime Text after reading this **


  More information
  ----------------
  Please take the time to read the documentation:

  In case of trouble, please read the Troubleshooting section in the README.

  * Online - http://sublimecodeintel.github.io/SublimeCodeIntel/
  * Git - https://github.com/SublimeCodeIntel/SublimeCodeIntel


  IMPORTANT
  ---------

  Do NOT edit the default SublimeCodeIntel settings. Your changes will be lost
  when SublimeCodeIntel is updated. ALWAYS edit the user SublimeCodeIntel settings
  by selecting "Preferences->Package Settings->SublimeCodeIntel->Settings - User".
  Note that individual settings you include in your user settings will **completely**
  replace the corresponding default setting, so you must provide that setting in its entirety.


TrailingSpaces
--------------



      Thank you for installing Trailing Spaces
      ----------------------------------------

      You're now ready to give trailing spaces *a hard time*!


  Documentation
  =============

  Although the usage of this plugin is dead simple, it comes with several options. All
  details are available in the documentation, and you can read it by clicking on
  "Preferences / Package Settings / Trailing Spaces / Help", or in a prettier form, by
  browsing https://github.com/SublimeText/TrailingSpaces.

  Key Binding
  ===========

  This plugin does not come with a default key binding for the deletion command. You can
  pick your own key binding and define it in "Preferences / Key Bindings - User", or just
  stick to using the menu entry under "Edit". Check the help for advice on this.

  Upgrades & Issues
  =================

  Package Control will automatically update all packages every time the editor is started,
  so there is nothing for you to worry about. If you however do find the plugin not to work
  as it used to, head to the issues tracker (see links below) to report the problem.

  Useful Links
  ============

  * Documentation & Code: https://github.com/SublimeText/TrailingSpaces
  * Report issues / Request New Features / Roadmap: https://github.com/SublimeText/TrailingSpaces/issues
  * Follow me on twitter: @jdvauguet


CSS Format
----------

  Thank you for installing CSS Format!


  Usage
  -----

  Select the code, or place cursor in the document, and execute commands in one of the following ways:

  * Context Menu: CSS Format.
  * Edit Menu: Edit > CSS Format.
  * Command Panel: Open command panel: `Ctrl+Shift+P` (Linux/Windows) or `Cmd+Shift+P` (OS X) and select **CSS Format: XXX**.


  Shortcuts
  ---------

  By default CSS Format provides no keyboard shortcuts to avoid conflicts, but you can view the included `Example.sublime-keymaps` file to get an idea how to set up your own.


  Author
  ------

  Created by Mutian [http://mutian.info/].
  For more info, you can send email to me: mutian@me.com!
